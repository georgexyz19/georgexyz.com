title: Vim Full Version Installation in Ubuntu and Tips
slug: vim-ubuntu-install
meta: Vim Ubuntu Installation Guide
tags: vim, ubuntu, linux
date: 2019-04-01 12:45
modified: 2020-06-02 16:24


Ubuntu 18.04 comes with a stripped down version of Vim. If you want to use Vim for 
serious work, you want the full version. 

### Vim Installation

The default version is started via command `vi`. The `vi --version` command shows 
the version information. Note the Line 5 below shows "Small version without GUI". 

```
VIM - Vi IMproved 8.0 (2016 Sep 12, compiled Apr 10 2018 21:31:58)
Included patches: 1-1453
Modified by pkg-vim-maintainers@lists.alioth.debian.org
Compiled by pkg-vim-maintainers@lists.alioth.debian.org
Small version without GUI.  Features included (+) or not (-):
+acl               -extra_search      -mouse_netterm     -tag_old_static
-arabic            -farsi             -mouse_sgr         -tag_any_white
...
+ex_extra          -mouse_jsbterm     +tag_binary 
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
 2nd user vimrc file: "~/.vim/vimrc"
      user exrc file: "$HOME/.exrc"
       defaults file: "$VIMRUNTIME/defaults.vim"
  fall-back for $VIM: "/usr/share/vim"
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H   -Wdate-time  -g -O2 
-fdebug-prefix-map=/build/vim-NQEcoP/vim-8.0.1453=. -fstack-...

```

If you type command `vim` in bash, it will tell you that "command vim not found". 

```
george@X250:~$ vim
Command 'vim' not found, but can be installed with:
sudo apt install vim
sudo apt install vim-gtk3
sudo apt install vim-tiny
sudo apt install neovim
sudo apt install vim-athena
sudo apt install vim-gtk
sudo apt install vim-nox
```

Those three commands remove the existing vim-tiny and install the full version with GUI
vim-gtk3 in Ubuntu 18.04 or Xubuntu. 

```
sudo apt-get remove vim-tiny
sudo apt-get update
sudo apt-get install vim-gtk3
```

You can then check the vim version by command `vim --version`. 

### Basic Vim Settings

Vim automatically loads `~/.vimrc` file during startup. Some default settings of vim 
do not make sense. Below are some most basic vim settings. 

```
" ~/.simple.vimrc file; $vim -u ~/.simple.vimrc to load
set nocompatible              " required
filetype plugin on
syntax enable

"path and find, fuzzy file finder
set path+=**  " search subdir recursively, find ...
set wildmenu

set number " show line numbers

" Set ignore case, highlight, and incremental searches
set ignorecase
set hlsearch
set incsearch

```

### Vim Tips

#### Startup

Vim loads `~/.vimrc` by default, and you can change the behavior by using `-u` option on 
command line.

```
$vim -u ~/.simple.vimrc filename
$vim -u NONE  # do not load any config file
```

#### Set Initial Console Window Size

On Linux terminal, you can use `set lines=50 columns=100` to set initial console size. 
I have those lines in my `~/.vimrc` file. 

```
if exists("+lines")
  set lines=80
endif
if exists("+columns")
  set columns=120
endif
```

*Source: [an article](https://vim.fandom.com/wiki/Maximize_or_set_initial_window_size) on fandom.com.*


#### Fuzzy Find

The following two settings help the `:find` command to do file fuzzy finding. 

```
set path+=**
set wildmenu
:find *cache # Press Tab key to find file name with cache
```

*Source: [a video talk](https://youtu.be/XA2WjJbmmoM) on youtube.*

#### Auto Complete

Vim itself has auto complete function built in. In the insert mode, you can type a 
few letters such as 'Com', and then press `^n` to bring up auto complete menu. It 
is very handy when you are programming because you often need to type variable and 
class names multiple times on a file. 

^x^n
: Search in this file, ^ represents Ctrl key 

^x^f
: Search filename

^x^]
: Search tag

^n
: search by default

^n  ^p
: next prev on the menu

#### Current Filename

Command `^g` shows the name of the current file. Or you can type the following vim 
commands. 

```
:echo @%
:!ls %:p  # will show absolute path of file
```

#### Navigation

Keys `h j k l` are the basic navigation commands in normal mode. Commands `w b e` 
jump cursor to next word, begin of word, or end of word. Other common navigation 
commands are listed below. 

gg
: move cursor to top

G
: move cursor to bottom

:`<n>`
: jump cursor to line number n, or `<n>G`

^e
: show an extra line

^y
: opposite of ^e

^d
: move down half screen

^u
: move up half screen

%
: matching ( { or [

H
: move cursor to top

M
: move cursor to middle

L
: move cursor to low corner

#### Common Commands

Vim is in a different league comparing to other text editors. It does not have 
some common commands other editors have. But some of those commands are so 
common, it is better to customize vim to support them. For example, the 
command `:saveas` is sometimes very convenient. The settings below add 
`Ctrl+s` shortcut for saving file.  

```
noremap <silent> <C-S>  :update<CR>
vnoremap <silent> <C-S> :<C-C>:update<CR>
inoremap <silent> <C-S> <C-O>:update<CR>
```

#### Spell Check

Vim has a built in spell checker. You use `set spell` to turn it on 
and `set nospell` to turn it off.  Here are some other commands on how to 
use it.

setlocal spell
: for current buffer only

]s
: move to next misspelled word

[s
: previous misspelled word

z=
: cursor on the word, list of suggested words

zg
: the word is correct, add it to personal dictionary

The `spelllang` settings is to specify the language, and the default is `en`. 
You can set it to `en_us` to specify American English. You can also use 
`spellfile` setting to specify a personal dictionary file for `zg` command. 

*Source: [an article](https://www.linux.com/training-tutorials/using-spell-checking-vim/) on linux.com & 
[a blog post](http://thejakeharding.com/tutorial/2012/06/13/using-spell-check-in-vim.html) by Jake Harding.*

#### GNOME Terminal Shortcuts

The Linux Mint comes with Gnome teminal. You can open additional tabs by pressing
shortcut `Ctrl + Shift + t`, and move to next tab by pressing `Ctrl + PageDown`. 
This does not necessarily relate to Vim, but I often use them so they are listed here. 



